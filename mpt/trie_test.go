package mpt

import (
	"testing"

	"github.com/joeqian10/neo-gogogo/helper"
)

func TestVerifyProof(t *testing.T) {
	proofStr := "36ede885a67c119adfad770028e7f5a1f86ceaa171636f6e747261637400746f74616c53750070706c790000000000000000000000000c044c01290e0d0e0808050a06070c0101090a0d0f0a0d0707000002080e070f050a010f08060c0e0a0a010701062022646ab47c7718cf3dbc7a691c1cac045dc2c7d2054fa5400be07d30877c64c552000020a37ab67e18101a7a3107ec035dd1f94a9a5327d454e5b7e612f83149f6868605002053201a4bef5f824239584076a2d054dc04d54166144ebec145fa23687f9fb71000000000000000000000000000650142060f060e0704070206010603070400000704060f07040601060c05030705000007000700060c0709000000000000000000000000000000000000000000000000000c2011bb4694254f030349072646461eba77785a5b4a10bb4be7b79f0f62947b80981203000210270000000000000000000000000b"
	proofdata := helper.HexToBytes(proofStr)

	root, _ := helper.UInt256FromString("0xeb09a362dce54e06c1d219e60e397783a7b9ba6fb7de9a8a6f29300c2d36048b")

	scriptHash, key, proofs, err := ResolveProof(proofdata)
	if err != nil {
		t.Error(err)
	}
	value, err := VerifyProof(root.Bytes(), scriptHash, key, proofs)
	if err != nil {
		t.Error("verify proof err:", err)
	}

	if helper.BytesToHex(value) != "1027" {
		t.Error("wrong value")
	}

	if scriptHash.String() != "71a1ea6cf8a1f5e7280077addf9a117ca685e8ed" {
		t.Error("wrong nep5")
	}
}
